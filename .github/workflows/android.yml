name: Build Dev

on:
  repository_dispatch:
    types: [build_dev]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    # Checkout your master repo
    - uses: actions/checkout@v2
      with:
        repository: ${{ github.repository_owner }}/Kuroba
        fetch-depth: 0

    # Get the SHA for the most recent commit in your master repo
    - name: Generate Git SHA
      id: get-SHA
      run: |
        echo "::set-output name=SHA::$(git rev-parse HEAD)"
        
    # Trim the commit SHA to be 8 characters long for the release
    - name: Generate Tag
      id: get-tag
      run: |
        echo "::set-output name=tag::$(echo ${{ steps.get-SHA.outputs.SHA }} | cut -c1-8)"
    
    # Get the version tag of the most recent release in your master repo
    - name: Generate Version
      id: get-version
      run: |
        echo "::set-output name=version::$(git describe --abbrev=0 --tags)"
    
    # Set up the JDK for the build
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: |
          8
          11
    
    # Set up any Android SDK dependencies; this is similar to a travis setup, change the vars as needed
    - name: Install Android Libraries
      env:
        API: 32
        BUILDTOOLS: 30.0.3
        NDK: 22.1.7171670
      run: |
        echo "y" | sudo /usr/local/lib/android/sdk/tools/bin/sdkmanager --install "tools" "platforms;android-$API" "build-tools;$BUILDTOOLS" "extras;android;m2repository" "ndk;$NDK" --sdk_root=${ANDROID_SDK_ROOT} > /dev/null
    
    # Build the android project and store the location of the generated APK and build name
    - name: Build with Gradle
      id: build
      run: |
        cd ./Kuroba
        ./gradlew assembleDevDebug --console plain -x lint
        cd ..
        echo "::set-output name=output_apk::$(find -name "*.apk")"
        echo "::set-output name=app-name::$(find -name "*.apk" | xargs basename | sed 's/\.apk//')"
    
    # Create a release in this repository with a tag name of <release_version>-<trimmed_SHA> and a body of the full commit SHA
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1.1.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        release_name: ${{ steps.get-version.outputs.version }}-${{ steps.get-tag.outputs.tag }}
        tag_name: ${{ steps.get-version.outputs.version }}-${{ steps.get-tag.outputs.tag }}
        body: ${{ steps.get-SHA.outputs.SHA }}
     
    # Upload the generated APK from the build step to the URL generated by the create release step, renaming the APK to be <name>-<trimmed_SHA>.apk
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ steps.build.outputs.output_apk }}
        asset_name: ${{ steps.build.outputs.app-name }}-${{ steps.get-tag.outputs.tag }}.apk
        asset_content_type: application/vnd.android.package-archive
    
    - name: Delete older releases
      uses: dev-drprasad/delete-older-releases@v0.1.0
      with:
        keep_latest: 25
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
